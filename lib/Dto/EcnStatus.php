<?php
/**
 * EcnStatus
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  MagDv\Cargomart
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Cargomart API v2
 *
 * REST-Full API для логистической биржи cargomart.ru
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@cargomart.ru
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MagDv\Cargomart\Dto;
use \MagDv\Cargomart\ObjectSerializer;

/**
 * EcnStatus Class Doc Comment
 *
 * @category Class
 * @description Статус ЭТРН в Каргомарте(  draft - создан,   waiting_for_sign - ожидает подписания,   waiting_loading_to_external_service - ожидает загрузки во внешний сервис,   loading_to_external_service - идет загрузка во внешний сервис,   loaded - загружено во внешний сервис,   loading_error - ошибка загрузки во внешний сервис,    waiting_to_cancel - ожидает отмены во внешнем сервисе,    canceling - отменяется во внешнем сервисе,   canceled - отменено во внешнем сервисе,   done - жц во внешнем сервисе завершен)
 * @package  MagDv\Cargomart
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EcnStatus
{
    /**
     * Possible values of this enum
     */
    public const DRAFT = 'draft';

    public const WAITING_FOR_XML_GENERATING = 'waiting_for_xml_generating';

    public const WAITING_FOR_SIGN = 'waiting_for_sign';

    public const WAITING_LOADING_TO_EXTERNAL_SERVICE = 'waiting_loading_to_external_service';

    public const LOADING_TO_EXTERNAL_SERVICE = 'loading_to_external_service';

    public const LOADED = 'loaded';

    public const LOADING_ERROR = 'loading_error';

    public const WAITING_TO_CANCEL = 'waiting_to_cancel';

    public const CANCELING = 'canceling';

    public const CANCELED = 'canceled';

    public const DONE = 'done';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::DRAFT,
            self::WAITING_FOR_XML_GENERATING,
            self::WAITING_FOR_SIGN,
            self::WAITING_LOADING_TO_EXTERNAL_SERVICE,
            self::LOADING_TO_EXTERNAL_SERVICE,
            self::LOADED,
            self::LOADING_ERROR,
            self::WAITING_TO_CANCEL,
            self::CANCELING,
            self::CANCELED,
            self::DONE
        ];
    }
}



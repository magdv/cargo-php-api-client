<?php
/**
 * OrderEditApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  MagDv\Cargomart
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Cargomart API v2
 *
 * REST-Full API для логистической биржи cargomart.ru
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@cargomart.ru
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MagDv\Cargomart\Test\Api;

use \MagDv\Cargomart\Configuration;
use \MagDv\Cargomart\ApiException;
use \MagDv\Cargomart\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrderEditApiTest Class Doc Comment
 *
 * @category Class
 * @package  MagDv\Cargomart
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderEditApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiV2OrderOrderIdClientAccessDelete
     *
     * Удалить список партнеров из исключенных..
     *
     */
    public function testApiV2OrderOrderIdClientAccessDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdClientAccessGet
     *
     * Получение списка исключеных партнеров..
     *
     */
    public function testApiV2OrderOrderIdClientAccessGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdClientAccessPatch
     *
     * Отправить список партнеров на исключение..
     *
     */
    public function testApiV2OrderOrderIdClientAccessPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdClonePost
     *
     * Создание нового заказа из шаблона или на основании.
     *
     */
    public function testApiV2OrderOrderIdClonePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdContactDelete
     *
     * Список контактов на удаление из заказа..
     *
     */
    public function testApiV2OrderOrderIdContactDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdContactGet
     *
     * Получение списка контактов..
     *
     */
    public function testApiV2OrderOrderIdContactGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdContactPatch
     *
     * Отправить список контактов для добавления..
     *
     */
    public function testApiV2OrderOrderIdContactPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdDelete
     *
     * Удаление заказа.
     *
     */
    public function testApiV2OrderOrderIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdEditGet
     *
     * Получение данных для редактирования заказа.
     *
     */
    public function testApiV2OrderOrderIdEditGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdModerationApprovePost
     *
     * Опубликовать заказ под ГП..
     *
     */
    public function testApiV2OrderOrderIdModerationApprovePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdModerationDelete
     *
     * Забрать заказ на модерации ГП..
     *
     */
    public function testApiV2OrderOrderIdModerationDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdModerationPost
     *
     * Отправка заказа на модерацию ГП..
     *
     */
    public function testApiV2OrderOrderIdModerationPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdModerationRejectPost
     *
     * Отклонение модератором заказа..
     *
     */
    public function testApiV2OrderOrderIdModerationRejectPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPatch
     *
     * Редактирование информации о заказе.
     *
     */
    public function testApiV2OrderOrderIdPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPointPointIdDelete
     *
     * Удаление маршрутной точки.
     *
     */
    public function testApiV2OrderOrderIdPointPointIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPointPointIdGet
     *
     * Получение информации по кокретной точке.
     *
     */
    public function testApiV2OrderOrderIdPointPointIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPointPointIdPatch
     *
     * Редактирование маршрутной точки.
     *
     */
    public function testApiV2OrderOrderIdPointPointIdPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPointPost
     *
     * Создание новой маршрутной точки.
     *
     */
    public function testApiV2OrderOrderIdPointPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPointSwapPost
     *
     * Изменение последовательности точек..
     *
     */
    public function testApiV2OrderOrderIdPointSwapPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdPublishPost
     *
     * Публикация заказа.
     *
     */
    public function testApiV2OrderOrderIdPublishPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdSavePost
     *
     * Перевод заказа из времменого в черновики..
     *
     */
    public function testApiV2OrderOrderIdSavePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdTagGet
     *
     * Получение списка тэгов заказа..
     *
     */
    public function testApiV2OrderOrderIdTagGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdTagPut
     *
     * Запись списка тэгов..
     *
     */
    public function testApiV2OrderOrderIdTagPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderOrderIdValidatePost
     *
     * Проверка валидности заказа.
     *
     */
    public function testApiV2OrderOrderIdValidatePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV2OrderPost
     *
     * Создание нового заказа.
     *
     */
    public function testApiV2OrderPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}

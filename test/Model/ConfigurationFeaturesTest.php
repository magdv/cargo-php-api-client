<?php
/**
 * ConfigurationFeaturesTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  MagDv\Cargomart
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Cargomart API v2
 *
 * REST-Full API для логистической биржи cargomart.ru
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@cargomart.ru
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MagDv\Cargomart\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ConfigurationFeaturesTest Class Doc Comment
 *
 * @category    Class
 * @description Доступная функциональность
 * @package     MagDv\Cargomart
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ConfigurationFeaturesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ConfigurationFeatures"
     */
    public function testConfigurationFeatures()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consignor_expeditor_orders"
     */
    public function testPropertyConsignorExpeditorOrders()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expeditor_carrier_documents"
     */
    public function testPropertyExpeditorCarrierDocuments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expeditor_customer"
     */
    public function testPropertyExpeditorCustomer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "new_order_edit_form"
     */
    public function testPropertyNewOrderEditForm()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "common_draft"
     */
    public function testPropertyCommonDraft()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "one_order_list"
     */
    public function testPropertyOneOrderList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_downtime_claim"
     */
    public function testPropertyOrderDowntimeClaim()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_filter_new"
     */
    public function testPropertyOrderFilterNew()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_roadmap"
     */
    public function testPropertyOrderRoadmap()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "price_prediction"
     */
    public function testPropertyPricePrediction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "small_carrier"
     */
    public function testPropertySmallCarrier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "web_socket"
     */
    public function testPropertyWebSocket()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
